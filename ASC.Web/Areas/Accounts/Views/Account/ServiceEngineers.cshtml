@using Microsoft.AspNetCore.Identity;
@using System.Security.Claims;
@model ASC.Web.Areas.Accounts.Models.ServiceEngineerViewModel
@inject UserManager<IdentityUser> UserManager;
@{
    Layout = "_SecureLayout";
}
<div>
    <div class="row"></div>
    <div class="row padding-left-20px padding-right-20px">
        <div class="row z-depth-3">
            <div class="section white-text padding-left-10px blue-grey lighten-1">
                <h5">User</h5>
            </div>
        </div>
        <div class="divider"></div>
        <div class="col s12 padding-bottom-15px">
                @if (Model.SericeEngineers != null)
                {
                <table class="highlight centered" id="tblServiceEngineers">
                    <thead>
                        <tr>
                            <th data-field="Email">Email</th>
                            <th data-field="UserName">Name</th>
                            <th data-field="IsActive">Is Active</th>
                            <th data-field="IsActiveImg">Is Active</th>
                            <th data-field="Actions">Edit User </th>
                        </tr>
                    </thead>
                    <tbody>
                            @foreach (var user in Model.SericeEngineers)
                            {
                                var identity = await UserManager.GetClaimsAsync(user);
                            <tr>
                                <td>@user.Email</td>
                                <td>@user.UserName</td>
                                <td>
                                        @bool.Parse(identity.SingleOrDefault(p => p.Type == "IsActive").Value)
                                </td>
                                <td>
                                    <img src="@(bool.Parse(identity.SingleOrDefault(p => p.Type == "IsActive").Value) ? "/images/green_tick.png" : "/images/red_cross.png")" />
                                </td>
                                <td>
                                    <i class="small material-icons edit cursor-hand">
                                        mode_edit
                                    </i>
                                </td>
                            </tr>
                            }
                    </tbody>
                </table>
                }
                else
                {
                <div class="card blue-grey lighten-1">
                    <div class="card-content white-text">
                        <span class="card-title">No Service Engineers!!!</span>
                        <p>
                            No Service Engineers found, please add a Service Engineer to system.
                        </p>
                    </div>
                </div>
                }
        </div>
        <div class="row z-depth-3">
            <div class="col s12 padding-0px">
                <div class="section white-text padding-left-10px blue-grey lighten-1">
                    <h5>Service Engineer Details</h5>
                </div>
                <div class="divider"></div>
                <form asp-controller="Account" asp-action="ServiceEngineers" method="post" class="col s12" id="fromUser">
                    <input type="hidden" asp-for="Registration.IsEdit" />
                    <input type="hidden" asp-for="Registration.Email" />

                    <div class="input-field col s4">
                        <input asp-for="Registration.Email" id="Registration_Email" type="email" />
                        <label for="Registration_Email">Email</label>
                        <span asp-validation-for="Registration.Email" class="red-text text-darken-2"></span>
                    </div>

                    <div class="input-field col s4">
                        <input asp-for="Registration.UserName" id="Registration_UserName" type="text" class="validate" />
                        <label for="Registration_UserName">Username</label>
                        <span asp-validation-for="Registration.UserName" class="red-text text-darken-2"></span>
                    </div>

                    <div class="input-field col s4">
                        <input asp-for="Registration.Password" id="Registration_Password" type="password" class="validate" />
                        <label for="Registration_Password">Password</label>
                        <span asp-validation-for="Registration.Password" class="red-text text-darken-2"></span>
                    </div>

                    <div class="input-field col s4">
                        <input asp-for="Registration.ConfirmPassword" id="Registration_ConfirmPassword" type="password" class="validate" />
                        <label for="Registration_ConfirmPassword">Confirm Password</label>
                        <span asp-validation-for="Registration.ConfirmPassword" class="red-text text-darken-2"></span>
                    </div>

                    <div class="col s4">
                        <div class="switch" style="margin-top: 25px;">
                            <label>
                                Is Active
                                <input asp-for="Registration.IsActive" type="checkbox" />
                                <span class="lever"></span>
                            </label>
                        </div>
                    </div>

                    <div class="input-field col s4 right-align">
                        <button class="btn waves-effect waves-light btnSubmit" type="submit" name="action">
                            Create
                            <i class="material-icons right">send</i>
                        </button>
                        <button class="btn waves-effect waves-light red lighten-1" type="button" name="action">
                            Reset
                        </button>
                    </div>

                    <div class="row col s12 right-align" asp-validation-summary="All"></div>
                </form>
            </div>
            <div class="row"></div>
        </div>
</div>
</div>
<script>
    $(document).ready(function () {
        // Initialize Datatable to show list of Engineers
        var table = $('#tblServiceEngineers').DataTable({
            'pageLength': 3, // Number of records to display per page
            'lengthMenu': [[3, 5, 10, -1], [3, 5, 10, 'All']] // Set number of records to be displayed per page
        });

        // Set Styles for DataTable and Number of Records to be displayed in drop-down
        $('#tblServiceEngineers').css('width', '100%');
        $('select[name="tblServiceEngineers_length"]').formSelect();

        // Get the column API object
        var isActiveColumn = table.column(2);
        isActiveColumn.visible(false);

        // Handle Reset functionality
        $('#document').on('click', '.reset', function () {
            $('#fromUser')[0].reset();
            $('.btnSubmit').removeAttr('disabled');
            $('.btnSubmit').text('Create');
            $('#Registration_IsEdit').val('False');
        });

        // This is required to disable Email field on Server-side model validation failure.
        if ($('#Registration_IsEdit').val() === 'True') {
            $('#Input_Registration_Email').attr('disabled', 'disabled');
        }

        // On click of Edit icon, populate the details section with details of service engineer
        $('#document').on('click', '.edit', function () {
            var user = $('#tblServiceEngineers').DataTable().row($(this).parents('tr')).data();
            $('#Registration_IsEdit').val('True');
            $('#Input_Registration_Email').val(user[0]).attr('disabled', 'disabled');
            $('#Registration_UserName').val(user[1]);
            $('#Registration_IsActive').prop('checked', user[2] === 'True' ? true : false);
            $('.btnSubmit').text('Save');
            M.updateTextFields();
        });
        document.addEventListener('DOMContentLoaded', function () {
            var elems = document.querySelectorAll('select');
            M.FormSelect.init(elems);
        });
        document.addEventListener('DOMContentLoaded', function () {
            M.updateTextFields();
        });
        $('#Registration_IsActive').prop('checked', user[2] === 'True');
        // Set hidden Email field to correct value from UI field
        // This is required for Edit functionality
        $('#document').on('click', '.btnSubmit', function () {
            $('#Registration_Email').val($('#Input_Registration_Email').val());
            M.updateTextFields();
        });
    });
</script>